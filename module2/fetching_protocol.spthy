theory fetching_protocol
// Do not change the theory name. i.e. do not change the above line
begin

/** !!! DO NOT EDIT BELOW !!! */

builtins: symmetric-encryption, asymmetric-encryption, diffie-hellman, hashing

rule Server:
  [ Fr(~ltk) ] --[ Server_Key($S, ~ltk) ]-> [ !Server($S, ~ltk), !ServerPK($S, pk(~ltk)), Out(pk(~ltk)) ]

rule ServerCompromise:
  [ !Server($S, ~ltk) ] --[ ServerCompromise($S) ]-> [ Out(~ltk) ]

rule Client:
  [ Fr(~ltk) ] --[ Client_Key($C, ~ltk) ]-> [ !Client($C, ~ltk), Out('g'^~ltk) ]

rule ClientCompromise:
  [ !Client($C, ~ltk) ] --[ ClientCompromise($C) ]-> [ Out(~ltk) ]

rule Submission:
  [ !Client($C, ~ltk)
  , Fr(~eph), Fr(~secret) ]
  --[ StoreSecret($S, $C, ~secret) ]->
  [ !StoredSecret($S, ~secret, ('g'^~ltk)^~eph, 'g'^~eph), FetchToken(~secret)
  , Out('g'^~eph) ]

lemma Executability:
  exists-trace
  "Ex c s k chall sec #t1 #t2 #t3 #t4 #t5.
        ClientBegin(c, s, k) @ #t1
      & ServerChallenge(s, k, chall, sec) @ #t2
      & ClientRespond(c, s, k, chall) @ #t3
      & ServerRelease(s, k, sec) @ #t4
      & ClientReceive(c, s, k, sec) @ #t5
      & #t1 < #t2 & #t2 < #t3 & #t3 < #t4 & #t4 < #t5"

/** !!! DO NOT EDIT ABOVE !!! */

rule ClientBegin:
[Fr(~k), !ServerPK($S, pkS)]
--[ClientBegin($C, $S, ~k)]->
[Out(<'request', aenc(~k, pkS)>), !SharedKey(~k)]

rule ServerChallenge:
[In(<'request', m>), !Server($S, ~ltk),
!StoredSecret($S, ~secret, v, geph), Fr(~c), Fr(~r)
]
--[ServerChallenge($S, adec(m, ~ltk), v, ~secret)]->
[Out(senc(<'challenge', senc(~c, v^~r), geph^~r>, adec(m, ~ltk))),
ChallengeState(~c, ~secret)]

rule ClientRespond:
[ In(senc(<'challenge', c_vr, geph_r>, ~ltk)), !SharedKey(k),
  !Client($C, ~ltk)]
--[ClientRespond($C, $S, k, sdec(c_vr, (geph_r)^~ltk))]->
[Out(senc(<'response', h(sdec(c_vr, (geph_r)^~ltk))>, k))]

rule ServerRelease:
[In(senc(<'response', h(c)>, k)),
ChallengeState(c, secret),
!SharedKey(k)
]
--[ServerRelease($S, k, secret)]->
[Out(senc(<'secret', secret>, k))]

rule ClientReceive:
[In(senc(<'secret', secret>, k)),
!SharedKey(k)
]
--[ClientReceive($C, $S, k, secret)]->
[]

/*    Start Lemmas    */
// You must write your lemmas within this section, lemmas placed before the previous line will not be graded.
// Do not modify this line and the previous two lines.

/* To formulate the following lemmas, you may only use built-in and the following action facts:
- ClientBegin
- ServerChallenge
- ClientRespond
- ServerRelease
- ClientReceive
- ServerCompromise
- ClientCompromise
- StoreSecret
*/

// Do not change the lemma's name
lemma Secrecy:
  "T"  // TODO: Replace this formula

// Do not change the lemma's name
lemma Agreement:
  "T"  // TODO: Replace this formula

// Do not change the lemma's name
lemma Injectivity:
  "T"  // TODO: Replace this formula

/*    End Lemmas    */
// Lemmas after this line will not be graded.
// Do not modify this line and the previous two lines.

// Do not add or modify ANYTHING after this line
end
